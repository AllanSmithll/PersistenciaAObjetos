<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="188" MadCap:lastWidth="625" MadCap:disableMasterStylesheet="true" MadCap:tocPath="" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Queries</title>
        <link href="SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="SkinSupport/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../index_CSH.html#queries.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><span class="MCBreadcrumbs">Native Queries</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        <h1>Queries</h1>
        <p>Let's take a look at a few examples queries. (<a href="javascript:void(0);" class="MCToggler" onclick="FMCToggler( this ); return false;" MadCap:targets="domainModel"><img style="border: none;margin-right: 5px;" src="SkinSupport/DropDownClosed.gif" MadCap:altsrc="SkinSupport/DropDownOpen.gif" class="MCTogglerIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( 'SkinSupport/DropDownOpen.gif' ); }" />Click here</a> to see the example domain model classes)</p>
        <div MadCap:targetName="domainModel" style="display: none;">
            <div class="codesnippet" MadCap:conditions="Primary.Java">
                <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">class</span> Car {
    <span style="color:Blue;">private</span> String carName;
    <span style="color:Blue;">private</span> <![CDATA[ ]]><span style="color:Blue;">int</span> horsePower;

    <span style="color:Blue;">public</span> Car(String carName, <span style="color:Blue;">int</span> horsePower) {
        <span style="color:Blue;">this</span>.carName = carName;
        <span style="color:Blue;">this</span>.horsePower = horsePower;
    }

    <span style="color:Blue;">public</span> String getCarName() {
        <span style="color:Blue;">return</span> carName;
    }

    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">int</span> getHorsePower() {
        <span style="color:Blue;">return</span> horsePower;
    }

    @Override
    <span style="color:Blue;">public</span> String toString() {
        <span style="color:Blue;">return</span> <![CDATA[ ]]><span style="color:#A31515;">"Car{"</span> +
                <span style="color:#A31515;">"carName='"</span> + carName + <span style="color:#A31515;">'\''</span> +
                <span style="color:#A31515;">", horsePower="</span> + horsePower +
                <span style="color:#A31515;">'}'</span>;
    }
}</pre>
                <div class="codesnippet-meta">Car.java: Domain model for cars
			<div class="codedownload"><a href="CodeExamples/queries/Example-tutorial-queries-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
            <div class="codesnippet" MadCap:conditions="Primary.Java">
                <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">class</span> Driver {
    <span style="color:Blue;">private</span> String name;
    <span style="color:Blue;">private</span> <![CDATA[ ]]><span style="color:Blue;">int</span> age;
    <span style="color:Blue;">private</span> Car mostLovedCar;

    <span style="color:Blue;">public</span> Driver(String name,<span style="color:Blue;">int</span> age) {
        <span style="color:Blue;">this</span>.name = name;
        <span style="color:Blue;">this</span>.age = age;
    }

    <span style="color:Blue;">public</span> Driver(String name,<span style="color:Blue;">int</span> age, Car mostLovedCar) {
        <span style="color:Blue;">this</span>.name = name;
        <span style="color:Blue;">this</span>.age = age;
        <span style="color:Blue;">this</span>.mostLovedCar = mostLovedCar;
    }

    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">void</span> setName(String name) {
        <span style="color:Blue;">this</span>.name = name;
    }

    <span style="color:Blue;">public</span> String getName() {
        <span style="color:Blue;">return</span> name;
    }

    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">int</span> getAge() {
        <span style="color:Blue;">return</span> age;
    }

    <span style="color:Blue;">public</span> Car getMostLovedCar() {
        <span style="color:Blue;">return</span> mostLovedCar;
    }

    @Override
    <span style="color:Blue;">public</span> String toString() {
        <span style="color:Blue;">return</span> <![CDATA[ ]]><span style="color:#A31515;">"Driver{"</span> +
                <span style="color:#A31515;">"name='"</span> + name + <span style="color:#A31515;">'\''</span> +
                <span style="color:#A31515;">", age="</span> + age +
                <span style="color:#A31515;">", mostLovedCar="</span> + mostLovedCar +
                <span style="color:#A31515;">'}'</span>;
    }
}</pre>
                <div class="codesnippet-meta">Driver.java: Domain model for drivers
			<div class="codedownload"><a href="CodeExamples/queries/Example-tutorial-queries-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
        </div>
        <div MadCap:conditions="Primary.Java">
            <h2><a name="NativeQueries"></a>Native Queries</h2>
            <p>Native queries are the preferred way to query a db4o database. To query the database, we pass in a predicate which filters objects by their properties. Here are two example queries:</p>
            <h3>Query for a Certain Person</h3>
            <p>This query finds all drivers named Joe:</p>
            <div class="codesnippet" MadCap:conditions="Primary.Java">
                <pre class="prettyprint" xml:space="preserve">List&lt;Driver&gt; drivers = container.query(<span style="color:Blue;">new</span> Predicate&lt;Driver&gt;() {
    @Override
    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">boolean</span> match(Driver driver) {
        <span style="color:Blue;">return</span> driver.getName().equals(<span style="color:#A31515;">"Joe"</span>);
    }
});</pre>
                <div class="codesnippet-meta">Queries.java: Query for drivers named Joe
			<div class="codedownload"><a href="CodeExamples/queries/Example-tutorial-queries-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
            <h3>More Complex Query</h3>
            <p>We can combine many criteria in a query by using logical operators. For example we query for all adult drivers with powerful cars by combining multiple criteria.</p>
            <div class="codesnippet" MadCap:conditions="Primary.Java">
                <pre class="prettyprint" xml:space="preserve">List&lt;Driver&gt; drivers = container.query(<span style="color:Blue;">new</span> Predicate&lt;Driver&gt;() {
    @Override
    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">boolean</span> match(Driver driver) {
        <span style="color:Blue;">return</span> driver.getMostLovedCar().getHorsePower()&gt;=150 &amp;&amp; driver.getAge()&gt;=18;
    }
});</pre>
                <div class="codesnippet-meta">Queries.java: Query for people with powerful cars
			<div class="codedownload"><a href="CodeExamples/queries/Example-tutorial-queries-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
            <h3>Native Query Optimization</h3>
            <p>db4o tries to optimize native queries by translating them to the <a href="#SODA">db4o low level query API</a>. In cases which that doesn't work db4o actually instantiates all objects and runs them through the predicate. Unfortunately that’s an order of magnitude slower than an optimized query.</p>
            <p>How do we find out that a query couldn't be optimized? The simplest way is to use the debugger. We add a break-point in query method. When the debugger stops there, then query couldn't be optimized. In that case try to simplify our query or use the <a href="#SODA">low level query API</a> directly. </p>
            <div class="codesnippet" MadCap:conditions="Primary.Java">
                <pre class="prettyprint" xml:space="preserve">List&lt;Driver&gt; drivers = container.query(<span style="color:Blue;">new</span> Predicate&lt;Driver&gt;() {
    @Override
    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">boolean</span> match(Driver driver) {
        <span style="color:Green;">// Add a break point here. If the debugger stops, the query couldn't be optimized</span>
        <span style="color:Green;">// That means it runs very slowly and we should find an alternative.</span>
        <span style="color:Green;">// This example query cannot be optimized because the hash code isn't a stored in database</span>
        <span style="color:Blue;">return</span> driver.hashCode() == 42;
    }
});</pre>
                <div class="codesnippet-meta">Queries.java: Unoptimized query
			<div class="codedownload"><a href="CodeExamples/queries/Example-tutorial-queries-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
        </div>
        <h2><a name="SODA"></a>SODA-Queries</h2>
        <p>SODA is db4o's low level query API. Prefer <a href="#NativeQueries"><span class="Primarynative queries">native queries</span></a> over this API. We create SODA queries by creating a query object. Then we add different criteria to that query object. Finally we execute the query and get the result. Let's take a look at two example queries:</p>
        <h3>Query for a Certain Person</h3>
        <p>Here we query for a driver named Joe with SODA:</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">Query query = container.query();
query.constrain(Driver.<span style="color:Blue;">class</span>);
query.descend(<span style="color:#A31515;">"name"</span>).constrain(<span style="color:#A31515;">"Joe"</span>);
List&lt;Driver&gt; drivers = query.execute();</pre>
            <div class="codesnippet-meta">Queries.java: Query for drivers named Joe with SODA
			<div class="codedownload"><a href="CodeExamples/queries/Example-tutorial-queries-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h3>More Complex Query</h3>
        <p>Here's a more complex query in SODA. We query for all adult drivers with powerful cars:</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">Query query = container.query();
query.constrain(Driver.<span style="color:Blue;">class</span>);
query.descend(<span style="color:#A31515;">"mostLovedCar"</span>).descend(<span style="color:#A31515;">"horsePower"</span>).constrain(150).greater();
query.descend(<span style="color:#A31515;">"age"</span>).constrain(18).greater().equal();
List&lt;Driver&gt; drivers = query.execute();</pre>
            <div class="codesnippet-meta">Queries.java: Query for people with powerful cars with SODA
			<div class="codedownload"><a href="CodeExamples/queries/Example-tutorial-queries-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div id="footer" MadCap:conditions="Primary.Online">
            <p align="center">Do you have any questions, suggestions or feedback? 
			Ask your questions in the <a href="http://community.versant.com/Forums.aspx" target="_top">db4o forums</a>. 
			Join the <a href="http://community.versant.com" target="_top">db4o community</a> for additional resources and news.
			<br /><br /><a href="http://www.db4o.com/" target="_top">www.db4o.com</a></p>
        </div>
        <script src="Resources/Code/jquery.min.js">
        </script>
        <script src="Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */ 
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>