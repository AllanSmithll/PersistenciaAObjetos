<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="188" MadCap:lastWidth="625" MadCap:disableMasterStylesheet="true" MadCap:tocPath="" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Basics</title>
        <link href="SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="SkinSupport/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../index_CSH.html#basics.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><span class="MCBreadcrumbs">Open a Database</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        <h1>Basics</h1>
        <p>Let's start with the basics. First we create a tiny domain model, consisting out of drivers and cars.  (<a href="javascript:void(0);" class="MCToggler" onclick="FMCToggler( this ); return false;" MadCap:targets="domainModel"><img style="border: none;margin-right: 5px;" src="SkinSupport/DropDownClosed.gif" MadCap:altsrc="SkinSupport/DropDownOpen.gif" class="MCTogglerIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( 'SkinSupport/DropDownOpen.gif' ); }" />Click here</a> to see the example domain model classes)</p>
        <div MadCap:targetName="domainModel" style="display: none;">
            <div class="codesnippet" MadCap:conditions="Primary.Java">
                <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">class</span> Car {
    <span style="color:Blue;">private</span> String carName;

    <span style="color:Blue;">public</span> Car(String carName) {
        <span style="color:Blue;">this</span>.carName = carName;
    }

}</pre>
                <div class="codesnippet-meta">Car.java: Domain model for cars
			<div class="codedownload"><a href="CodeExamples/firststeps/Example-tutorial-firststeps-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
            <div class="codesnippet" MadCap:conditions="Primary.Java">
                <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">class</span> Driver {
    <span style="color:Blue;">private</span> String name;
    <span style="color:Blue;">private</span> Car mostLovedCar;

    <span style="color:Blue;">public</span> Driver(String name) {
        <span style="color:Blue;">this</span>.name = name;
    }

    <span style="color:Blue;">public</span> Driver(String name, Car mostLovedCar) {
        <span style="color:Blue;">this</span>.name = name;
        <span style="color:Blue;">this</span>.mostLovedCar = mostLovedCar;
    }

    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">void</span> setName(String name) {
        <span style="color:Blue;">this</span>.name = name;
    }

    <span style="color:Blue;">public</span> String getName() {
        <span style="color:Blue;">return</span> name;
    }

    <span style="color:Blue;">public</span> Car getMostLovedCar() {
        <span style="color:Blue;">return</span> mostLovedCar;
    }
}</pre>
                <div class="codesnippet-meta">Driver.java: Domain model for drivers
			<div class="codedownload"><a href="CodeExamples/firststeps/Example-tutorial-firststeps-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
            </div>
        </div>
        <h2><a name="OpenDB"></a>Open a Database</h2>
        <p>For all operations we need to open the database first. To open the database we pass a file-path to db4o. db4o will open or create that database-file an return an object container. The object container is the connection to our database. All operations go through it.</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">ObjectContainer container = Db4oEmbedded.openFile(<span style="color:#A31515;">"database.db4o"</span>);
<span style="color:Blue;">try</span>{
    <span style="color:Green;">// use the object container in here</span>
} <span style="color:Blue;">finally</span> {
    container.close();
}</pre>
            <div class="codesnippet-meta">BasicOperations.java: Open and close db4o
			<div class="codedownload"><a href="CodeExamples/firststeps/Example-tutorial-firststeps-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="StoreObject"></a>Store an Object</h2>
        <p>To store an object in the database, we simply call the store-method on the object container. </p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">ObjectContainer container = Db4oEmbedded.openFile(<span style="color:#A31515;">"databaseFile.db4o"</span>);
<span style="color:Blue;">try</span> {
    Driver driver = <span style="color:Blue;">new</span> Driver(<span style="color:#A31515;">"Joe"</span>);
    container.store(driver);
} <span style="color:Blue;">finally</span> {
    container.close();
}</pre>
            <div class="codesnippet-meta">BasicOperations.java: Store an object
			<div class="codedownload"><a href="CodeExamples/firststeps/Example-tutorial-firststeps-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="QueryDB"></a>Query the Database</h2>
        <p>After storing objects we want to query for our stored objects. We can do this with <span class="Primarynative queries">native queries</span>. </p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">ObjectContainer container = Db4oEmbedded.openFile(<span style="color:#A31515;">"databaseFile.db4o"</span>);
<span style="color:Blue;">try</span> {
    List&lt;Driver&gt; drivers = container.query(<span style="color:Blue;">new</span> Predicate&lt;Driver&gt;() {
        <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">boolean</span> match(Driver d) {
            <span style="color:Blue;">return</span> d.getName().equals(<span style="color:#A31515;">"Joe"</span>);
        }
    });
    System.out.println(<span style="color:#A31515;">"Stored Pilots:"</span>);
    <span style="color:Blue;">for</span> (Driver driver : drivers) {
        System.out.println(driver.getName());
    }
} <span style="color:Blue;">finally</span> {
    container.close();
}</pre>
            <div class="codesnippet-meta">BasicOperations.java: Query for objects
			<div class="codedownload"><a href="CodeExamples/firststeps/Example-tutorial-firststeps-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="UpdateObject"></a>Update an Object</h2>
        <p>In order to update an object we first query for it. Then we change it and store it again. db4o will recognize the updated object and store the changes in the database.</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">ObjectContainer container = Db4oEmbedded.openFile(<span style="color:#A31515;">"databaseFile.db4o"</span>);
<span style="color:Blue;">try</span> {
    List&lt;Driver&gt; drivers = container.query(<span style="color:Blue;">new</span> Predicate&lt;Driver&gt;() {
        <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">boolean</span> match(Driver d) {
            <span style="color:Blue;">return</span> d.getName().equals(<span style="color:#A31515;">"Joe"</span>);
        }
    });
    Driver driver = drivers.get(0);
    System.out.println(<span style="color:#A31515;">"Old name"</span> +driver.getName());
    driver.setName(<span style="color:#A31515;">"John"</span>);
    System.out.println(<span style="color:#A31515;">"New name"</span> +driver.getName());
    <span style="color:Green;">// update the pilot</span>
    container.store(driver);
} <span style="color:Blue;">finally</span> {
    container.close();
}</pre>
            <div class="codesnippet-meta">BasicOperations.java: Update an object
			<div class="codedownload"><a href="CodeExamples/firststeps/Example-tutorial-firststeps-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="DeleteObject"></a>Delete an Object</h2>
        <p>Deleting an object is easy. First we query for the object and then delete it.</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">ObjectContainer container = Db4oEmbedded.openFile(<span style="color:#A31515;">"databaseFile.db4o"</span>);
<span style="color:Blue;">try</span> {
    List&lt;Driver&gt; drivers = container.query(<span style="color:Blue;">new</span> Predicate&lt;Driver&gt;() {
        <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">boolean</span> match(Driver d) {
            <span style="color:Blue;">return</span> d.getName().equals(<span style="color:#A31515;">"Joe"</span>);
        }
    });
    Driver driver = drivers.get(0);
    System.out.println(<span style="color:#A31515;">"Deleting "</span> +driver.getName());
    container.delete(driver);
} <span style="color:Blue;">finally</span> {
    container.close();
}</pre>
            <div class="codesnippet-meta">BasicOperations.java: Delete an object
			<div class="codedownload"><a href="CodeExamples/firststeps/Example-tutorial-firststeps-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <div id="footer" MadCap:conditions="Primary.Online">
            <p align="center">Do you have any questions, suggestions or feedback? 
			Ask your questions in the <a href="http://community.versant.com/Forums.aspx" target="_top">db4o forums</a>. 
			Join the <a href="http://community.versant.com" target="_top">db4o community</a> for additional resources and news.
			<br /><br /><a href="http://www.db4o.com/" target="_top">www.db4o.com</a></p>
        </div>
        <script src="Resources/Code/jquery.min.js">
        </script>
        <script src="Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */ 
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>